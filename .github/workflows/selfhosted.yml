name: Expense-Tracker

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_EMAIL }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}:latest

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_EMAIL }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}

      - name: Create .env file from GitHub Secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRY=${{ secrets.JWT_EXPIRY }}" >> .env
          echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
          echo "REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}" >> .env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "MAILER_HOST=${{ secrets.MAILER_HOST }}" >> .env
          echo "MAILER_PORT=${{ secrets.MAILER_PORT }}" >> .env
          echo "MAILER_SECURE=${{ secrets.MAILER_SECURE }}" >> .env
          echo "MAILER_USER=${{ secrets.MAILER_USER }}" >> .env
          echo "MAILER_PASSWORD=${{ secrets.MAILER_PASSWORD }}" >> .env
          echo "MAILER_FROM=${{ secrets.MAILER_FROM }}" >> .env
          echo "MAILER_FROM_NAME=${{ secrets.MAILER_FROM_NAME }}" >> .env
          echo "ACTIVATION_EMAIL=${{ secrets.ACTIVATION_EMAIL }}" >> .env
          echo "FORGOT_PASSWORD_EMAIL=${{ secrets.FORGOT_PASSWORD_EMAIL }}" >> .env

      - name: Stop and remove old container
        run: |
          docker stop ${{ secrets.DOCKER_REPO }} || true
          docker rm ${{ secrets.DOCKER_REPO }} || true

      - name: Run Docker container
        run: |
          docker run -d \
            --name ${{ secrets.DOCKER_REPO }} \
            --restart=always \
            --env-file .env \
            -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}:latest
